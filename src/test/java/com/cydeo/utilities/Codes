師匠  Master








                            LOCATOR
#1- linkText:
	- linkText locator will look through the TEXTS OF all of the links in the page, and return the matching link.
	- It accepts a string as the text of the link we are trying to locate
	- This locator will ONLY ONLY ONLY works on links. <a> tags only.
	- This method looks for EXACT text match.
	- It is similar to .equals method coming from JAVA.
	- It will search through HTML code and return first matching result.

	ex: <a href="https://something.com"> GOOGLE SEARCH </a>

	syntax: driver.findElement(By.linkText("GOOGLE SEARCH"));

#2- partialLinkText:
	- linkText locator will look through the TEXTS OF all of the links in the page, and return the PARTIAL matching link.
	- It accepts a string as the text of the link we are trying to locate
	- This locator will ONLY ONLY ONLY works on links. <a> tags only.
	- This method looks for PARTIAL text match.
	- It is similar to .CONTAINS method coming from JAVA.
	- It will search through HTML code and return first matching result.


	ex: <a href="https://something.com"> GOOGLE SEARCH </a>

	syntax1: driver.findElement(By.partialLinkText("GOOGLE"));
	syntax2: driver.findElement(By.partialLinkText("SEARCH"));
	syntax3: driver.findElement(By.partialLinkText("GOOGLE SEARCH"));

	All 3 syntaxes returns same web element.

#3  name:
	- it uses "name" attribute's value to locate web elements.
	- it will go through HTML code and find matching "name" attribute value, and return the first matching web element
	- name does not have to be unique. So use whenever possible.

	<div name="hu58"> </div>

	syntax: driver.findElement(By.name("hu58"));

#4 	id:
	- it uses "id" attribute's value to locate web elements.
	- it will go through HTML code and find matching "id" attribute value, and return the web element
	- id HAS TO BE UNIQUE.
	- id attribute's value will always be unique.

	<div name="hu58" id="asdf57"> </div>

	syntax: driver.findElement(By.id("asdf57"));

#5	className:
	- it uses "class" attribute's value to locate web elements.
	- it will go through HTML code and find matching "class" attribute value, and return the first matching web element.
	- class attribute's value does not have to be unique.

	<div name="hu58" id="asdf57" class="cde45"> </div>

	syntax: driver.findElement(By.className("cde45"));


#6  tagName:
	- it will find and return the first matching tag provided.
	- this locator does not have many use cases unless either the page is very simple page, or we are trying to get a group of web elements using findElementS method

	<div name="hu58" id="asdf57" class="cde45"> </div>

	syntax: driver.findElement(By.tagName("div"));


--------------------------------------------------------------------------------

- getText():
	- .getText() method will get the text from in between the opening tag and closing tag
	- it does not accept any argument
	- Return type: String

	ex : <a href="https://something.com"> GOOGLE SEARCH </a>

	driver.findElement(By.linkText("GOOGLE SEARCH"));
		-> returns me the link tag as a web element
		-> return type is WebElement.

	driver.findElement(By.linkText("GOOGLE SEARCH")).getText();
		-> this line returns me a String


--------------------------------------------------------------------------------

- getAttribute("attributeName");
	- .getAttribute() method will return the given attribute's value
	- it accepts a String argument.
	- return type: String
	- it will find the matching attribute, and return its value

	ex: <div name="hu58" id="asdf57" class="cde45"> TEXT </div>

	syntax: driver.findElement(By.id("asdf57")); --> this line returns the web element

- driver.findElement(By.id("asdf57")).getAttribute("class") --> cde45
- driver.findElement(By.id("asdf57")).getAttribute("name") --> hu58